# @see https://superface.ai/blog/npm-publish-gh-actions-changelog
name: Release package
on:
  workflow_dispatch:
    inputs:
      release-type:
        description: 'Release type (one of): patch, minor, major, prepatch, preminor, premajor, prerelease'
        required: true
jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      # Checkout project repository
      - name: Checkout
        uses: actions/checkout@v3

      # Configure Git
      - name: Git configuration
        run: |
          git config user.name $GITHUB_ACTOR
          git config user.email gh-actions-${GITHUB_ACTOR}@github.com

      # Setup Node.js environment
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          registry-url: https://registry.npmjs.org/
          node-version: 18

      # Install dependencies (required by Run tests step)
      - name: Install dependencies
        run: npm ci

      # Bump package version
      # Use tag latest
      - name: Bump release version
        if: startsWith(github.event.inputs.release-type, 'pre') != true
        run: |
          # echo "NEW_VERSION=$(npm --no-git-tag-version version $RELEASE_TYPE)" >> $GITHUB_ENV
          # echo "RELEASE_TAG=latest" >> $GITHUB_ENV
          npx nx run rxdb:version --releaseAs=$RELEASE_TYPE
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RELEASE_TYPE: ${{ github.event.inputs.release-type }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      # Bump package pre-release version
      # Use tag dev for pre-release versions
      - name: Bump pre-release version
        if: startsWith(github.event.inputs.release-type, 'pre')
        run: |
          # echo "NEW_VERSION=$(npm --no-git-tag-version --preid=dev version $RELEASE_TYPE
          # echo "RELEASE_TAG=dev" >> $GITHUB_ENV
          npx nx run rxdb:version --releaseAs=$RELEASE_TYPE --preid=dev
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RELEASE_TYPE: ${{ github.event.inputs.release-type }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      # Build
      - name: Build
        run: npx nx run rxdb:build

      # Publish version to public repository
      - name: Publish release version
        if: startsWith(github.event.inputs.release-type, 'pre') != true
        working-directory: packages/rxdb
        run: |
          npm pack
          npm publish --access public --non-interactive --no-git-tag-version --tag latest
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      # Publish version to public repository
      - name: Publish pre-release version
        if: startsWith(github.event.inputs.release-type, 'pre')
        working-directory: packages/rxdb
        run: |
          npm pack
          npm publish --access public --non-interactive --no-git-tag-version --tag dev
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
